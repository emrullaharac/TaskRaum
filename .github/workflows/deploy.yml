name: Deploy TaskRaum
on:
  push:
    branches: [ main ]

env:
  NODE_VERSION: '22'
  JAVA_VERSION: '21'

jobs:
  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      - name: Build Frontend
        working-directory: frontend
        run: |
          npm ci
          npm run build
      - uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/dist/

  build-backend:
    runs-on: ubuntu-latest
    needs: build-frontend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: backend/src/main/resources/static
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: temurin
          cache: maven
      - name: Build with Maven (fat jar = taskraum.jar)
        run: mvn -B -DskipTests package --file backend/pom.xml
      - uses: actions/upload-artifact@v4
        with:
          name: taskraum.jar
          path: backend/target/taskraum.jar

  push-to-docker-hub:
    runs-on: ubuntu-latest
    needs: build-backend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: taskraum.jar
          path: backend/target
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_IMAGE }}:latest
            ${{ secrets.DOCKERHUB_IMAGE }}:${{ github.sha }}

  deploy:
    needs: push-to-docker-hub
    runs-on: ubuntu-latest
    steps:
      - name: Trigger Render Deployment
        run: curl -s -X POST "${{ secrets.RENDER_DEPLOY_HOOK }}"